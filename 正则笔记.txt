正则表达式：
 1、创建  
    var reg = new RegExp("\d","g")

    var reg = /\d/g

2、修饰符
  i  不区分大小写
  g  执行全局匹配
  m  执行多行匹配

  var str = "Wadwad";
  var reg1 = /w/ig

3、正则的方法
  1、test() 检索字符串，是否符合我们的正则，返回值是true false
  2、match() 检索字符串，返回的符合正则的字符串，null
  3、replace()  字符串方法，替换符合正则的字符串

4、元字符
  1、.  查找所有字符，除了换行
  2、\w 查找所有单词字符
  3、\W 查找所有的非单词字符
  4、\d 查找所有的数字字符
  5、\D 查找素有的非数字字符
  6、\s 查找空白字符
  7、\S 查找非空白字符
  8、\b 查找单词边界
  9、\B 查找非单词边界
  10、\uxxxx  查找以十六进制数 xxxx 规定的 Unicode 字符

    中文范围  \u4e00-\u9fa5

5、方括号
  1、[ads]  查找方括号中间的任意字符
  2、[^abc] 查找不在方括号内的字符
  3、[0-9]
  4、[a-z]
  5、[A-Z]
  6、[A-z]
  7、[abc|bcd]

6、量词
  1、n+  表示至少包含1个n的字符串
  2、n* 匹配任何包含零个或多个 n 的字符串。
  3、n? 匹配任何包含零个或一个 n 的字符串
  4、n{x} 匹配包含 X 个 n 的序列的字符串。
  5、n{X,Y} 匹配包含 X 至 Y 个 n 的序列的字符串
  6、n{X,} 匹配包含至少 X 个 n 的序列的字符串。
  7、n$ 匹配任何结尾为 n 的字符串。
  8、^n 以n为开头的。
  9、?=n 匹配任何其后紧接指定字符串 n 的字符串。
  10、?!n 匹配任何其后没有紧接指定字符串 n 的字符串。


  手机验证  1 34578 9位数字
  身份证  1-9 5位数 18|19|20 两位数 01-12 01-31 3位识别 0-9Xx 

  6 地区
  8 年月日
  4 识别码
    